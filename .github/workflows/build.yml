name: Build Windows Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Download Visual C++
      run: |
        curl -L -o vc_redist.x64.exe "https://aka.ms/vs/16/release/vc_redist.x64.exe"

    - name: Install Visual C++
      run: |
        .\vc_redist.x64.exe /quiet /norestart

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel  # Ensure setuptools and wheel are available
        pip install pyinstaller
        # Add any other dependencies your project needs
        pip install .

    # Run build_test.py
    - name: Run build_test.py
      run: |
        python r2t2/build_test.py

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile `
          --add-data "C:\hostedtoolcache\windows\Python\3.10.11\x64\lib\site-packages\taichi\_lib\runtime;taichi/_lib/runtime" `
          romvlvs/build_test.py --name built_test.exe

    - name: Test the Executable
      run: |
        cd dist
        .build_test.exe
        if ($LastExitCode -ne 0) { throw "Executable failed with exit code $LastExitCode" }

    # Upload the executable as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/*.exe